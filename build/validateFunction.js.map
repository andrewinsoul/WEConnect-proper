{"version":3,"sources":["../src/validateFunction.js"],"names":["validator","request","schema","Object","keys","includes","name","string","required","location","category","userId","number","integer","profile","email","password1","password2","username","length","password","review","businessId","validate"],"mappings":";;;;;kBAMwBA,S;;AANxB;;;;;;AAEA;;;;AAIe,SAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACzC,MAAIC,eAAJ;AACA,MAAIC,OAAOC,IAAP,CAAYH,OAAZ,EAAqBI,QAArB,CAA8B,UAA9B,CAAJ,EAA+C;AAC7CH,aAAS;AACPI,YAAM,cAAIC,MAAJ,GAAaC,QAAb,EADC;AAEPC,gBAAU,cAAIF,MAAJ,GAAaC,QAAb,EAFH;AAGPE,gBAAU,cAAIH,MAAJ,GAAaC,QAAb,EAHH;AAIPG,cAAQ,cAAIC,MAAJ,GAAaC,OAAb,GAAuBL,QAAvB,EAJD;AAKPM,eAAS,cAAIP,MAAJ,GAAaC,QAAb;AALF,KAAT;AAOD,GARD,MASK,IAAIL,OAAOC,IAAP,CAAYH,OAAZ,EAAqBI,QAArB,CAA8B,WAA9B,CAAJ,EAAgD;AACnDH,aAAS;AACPI,YAAM,cAAIC,MAAJ,GAAaC,QAAb,EADC;AAEPO,aAAO,cAAIR,MAAJ,GAAaQ,KAAb,GAAqBP,QAArB,EAFA;AAGPQ,iBAAW,cAAIT,MAAJ,GAAaC,QAAb,EAHJ;AAIPS,iBAAW,cAAIV,MAAJ,GAAaC,QAAb,EAJJ;AAKPU,gBAAU,cAAIX,MAAJ,GAAaC,QAAb;AALH,KAAT;AAOD,GARI,MASA,IAAIL,OAAOC,IAAP,CAAYH,OAAZ,EAAqBkB,MAArB,KAAgC,CAAhC,IAAqChB,OAAOC,IAAP,CAAYH,OAAZ,EAAqBI,QAArB,CAA8B,OAA9B,CAArC,IAA+EF,OAAOC,IAAP,CAAYH,OAAZ,EAAqBI,QAArB,CAA8B,UAA9B,CAAnF,EAA8H;AACjIH,aAAS;AACPa,aAAO,cAAIR,MAAJ,GAAaQ,KAAb,GAAqBP,QAArB,EADA;AAEPY,gBAAU,cAAIb,MAAJ,GAAaC,QAAb;AAFH,KAAT;AAID,GALI,MAMA,IAAIL,OAAOC,IAAP,CAAYH,OAAZ,EAAqBI,QAArB,CAA8B,QAA9B,CAAJ,EAA6C;AAChDH,aAAS;AACPmB,cAAQ,cAAId,MAAJ,GAAaC,QAAb,EADD;AAEPO,aAAO,cAAIR,MAAJ,GAAaQ,KAAb,GAAqBP,QAArB,EAFA;AAGPU,gBAAU,cAAIX,MAAJ,GAAaC,QAAb,EAHH;AAIPc,kBAAY,cAAIV,MAAJ,GAAaC,OAAb,GAAuBL,QAAvB;AAJL,KAAT;AAMD,GAPI,MAQA;AACH,WAAO,6BAAP;AACD;AACD,SAAO,cAAIe,QAAJ,CAAatB,OAAb,EAAsBC,MAAtB,CAAP;AACD","file":"validateFunction.js","sourcesContent":["import Joi from 'joi';\r\n\r\n/**\r\n*\r\n* @param {Object} request\r\n*/\r\nexport default function validator(request) {\r\n  let schema;\r\n  if (Object.keys(request).includes('category')) {\r\n    schema = {\r\n      name: Joi.string().required(),\r\n      location: Joi.string().required(),\r\n      category: Joi.string().required(),\r\n      userId: Joi.number().integer().required(),\r\n      profile: Joi.string().required(),\r\n    };\r\n  }\r\n  else if (Object.keys(request).includes('password1')) {\r\n    schema = {\r\n      name: Joi.string().required(),\r\n      email: Joi.string().email().required(),\r\n      password1: Joi.string().required(),\r\n      password2: Joi.string().required(),\r\n      username: Joi.string().required(),\r\n    };\r\n  }\r\n  else if (Object.keys(request).length === 2 && Object.keys(request).includes('email') && Object.keys(request).includes('password')) {\r\n    schema = {\r\n      email: Joi.string().email().required(),\r\n      password: Joi.string().required(),\r\n    };\r\n  }\r\n  else if (Object.keys(request).includes('review')) {\r\n    schema = {\r\n      review: Joi.string().required(),\r\n      email: Joi.string().email().required(),\r\n      username: Joi.string().required(),\r\n      businessId: Joi.number().integer().required(),\r\n    };\r\n  }\r\n  else {\r\n    return 'was not validated by joi...';\r\n  }\r\n  return Joi.validate(request, schema);\r\n}\r\n"]}