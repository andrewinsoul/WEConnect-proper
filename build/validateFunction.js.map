{"version":3,"sources":["../src/validateFunction.js"],"names":["validateUserResource","req","res","next","url","checkBody","notEmpty","isEmail","method","isInt","checkParams","error","validationErrors","status","send","message","failures"],"mappings":";;;;;QAOgBA,oB,GAAAA,oB;AAPhB;;;;;;;AAOO,SAASA,oBAAT,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC,EAA8C;AACnD,MAAIF,IAAIG,GAAJ,KAAY,SAAhB,EAA2B;AACzBH,QAAII,SAAJ,CAAc,MAAd,EAAsB,kBAAtB,EAA0CC,QAA1C;AACAL,QAAII,SAAJ,CAAc,OAAd,EAAuB,uCAAvB,EAAgEC,QAAhE,GAA2EC,OAA3E;AACAN,QAAII,SAAJ,CAAc,UAAd,EAA0B,sBAA1B,EAAkDC,QAAlD;AACAL,QAAII,SAAJ,CAAc,WAAd,EAA2B,sBAA3B,EAAmDC,QAAnD;AACAL,QAAII,SAAJ,CAAc,WAAd,EAA2B,sBAA3B,EAAmDC,QAAnD;AACD,GAND,MAOK,IAAIL,IAAIG,GAAJ,KAAY,QAAhB,EAA0B;AAC7BH,QAAII,SAAJ,CAAc,OAAd,EAAuB,uCAAvB,EAAgEC,QAAhE,GAA2EC,OAA3E;AACAN,QAAII,SAAJ,CAAc,UAAd,EAA0B,sBAA1B,EAAkDC,QAAlD;AACD,GAHI,MAIA,IAAIL,IAAIG,GAAJ,KAAY,aAAZ,IAA6BH,IAAIO,MAAJ,KAAe,MAAhD,EAAwD;AAC3DP,QAAII,SAAJ,CAAc,QAAd,EAAwB,6CAAxB,EAAuEC,QAAvE,GAAkFG,KAAlF;AACD,GAFI,MAGA,IAAIR,IAAIG,GAAJ,KAAY,UAAZ,IAA0BH,IAAIO,MAAJ,KAAe,MAA7C,EAAqD;AACxDP,QAAII,SAAJ,CAAc,UAAd,EAA0B,sBAA1B,EAAkDC,QAAlD;AACAL,QAAII,SAAJ,CAAc,OAAd,EAAuB,mCAAvB,EAA4DC,QAA5D,GAAuEC,OAAvE;AACAN,QAAII,SAAJ,CAAc,YAAd,EAA4B,8CAA5B,EAA4EC,QAA5E,GAAuFG,KAAvF;AACAR,QAAII,SAAJ,CAAc,QAAd,EAAwB,oBAAxB,EAA8CC,QAA9C;AACD,GALI,MAMA,IAAIL,IAAIO,MAAJ,KAAe,KAAnB,EAA0B;AAC7BP,QAAIS,WAAJ,CAAgB,IAAhB,EAAsB,eAAtB,EAAuCJ,QAAvC,GAAkDG,KAAlD;AACD,GAFI,MAGA,IAAIR,IAAIO,MAAJ,KAAe,KAAnB,EAA0B;AAC7BP,QAAIS,WAAJ,CAAgB,IAAhB,EAAsB,eAAtB,EAAuCJ,QAAvC,GAAkDG,KAAlD;AACAR,QAAII,SAAJ,CAAc,SAAd,EAAyB,qBAAzB,EAAgDC,QAAhD;AACD;AACD,MAAMK,QAAQV,IAAIW,gBAAJ,EAAd;AACA,MAAID,KAAJ,EAAW,OAAOT,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,mBAAX,EAAgCC,UAAUL,KAA1C,EAArB,CAAP;AACX,SAAOR,MAAP;AACD","file":"validateFunction.js","sourcesContent":["/**\r\n *\r\n * @param {object} req\r\n * @param {object} res\r\n * @param {Function} next\r\n * @returns {object}\r\n */\r\nexport function validateUserResource(req, res, next) {\r\n  if (req.url === '/signup') {\r\n    req.checkBody('name', 'name is required').notEmpty();\r\n    req.checkBody('email', 'email is required and should be valid').notEmpty().isEmail();\r\n    req.checkBody('username', 'username is required').notEmpty();\r\n    req.checkBody('password1', 'password is required').notEmpty();\r\n    req.checkBody('password2', 'password is required').notEmpty();\r\n  }\r\n  else if (req.url === '/login') {\r\n    req.checkBody('email', 'email is required and should be valid').notEmpty().isEmail();\r\n    req.checkBody('password', 'password is required').notEmpty();\r\n  }\r\n  else if (req.url === '/businesses' && req.method === 'POST') {\r\n    req.checkBody('userId', 'userId is required and should be an integer').notEmpty().isInt();\r\n  }\r\n  else if (req.url === '/reviews' && req.method === 'POST') {\r\n    req.checkBody('username', 'username is required').notEmpty();\r\n    req.checkBody('email', 'a valid email address is required').notEmpty().isEmail();\r\n    req.checkBody('businessId', 'businessId required and should be an integer').notEmpty().isInt();\r\n    req.checkBody('review', 'review is required').notEmpty();\r\n  }\r\n  else if (req.method === 'GET') {\r\n    req.checkParams('id', 'Must be valid').notEmpty().isInt();\r\n  }\r\n  else if (req.method === 'PUT') {\r\n    req.checkParams('id', 'Must be valid').notEmpty().isInt();\r\n    req.checkBody('profile', 'profile is required').notEmpty();\r\n  }\r\n  const error = req.validationErrors();\r\n  if (error) return res.status(400).send({ message: 'validation failed', failures: error });\r\n  return next();\r\n}\r\n"]}