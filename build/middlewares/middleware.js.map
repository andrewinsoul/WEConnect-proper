{"version":3,"sources":["../../src/middlewares/middleware.js"],"names":["appMiddleware","req","res","next","body","error","status","send","details","message","password1","password2","email","find","item","username","Object","keys","includes","business","name","userId","length","businessIndex","findIndex","index","id","Number","params","query","msg","businessWithCategory","filter","category","businessWithLocation","location","businessId","businessReview"],"mappings":"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","file":"middleware.js","sourcesContent":["import { users } from '../models/user';\r\nimport { businesses } from '../models/business';\r\nimport validator from '../validateFunction';\r\nimport { reviews } from '../models/review';\r\n\r\nexport class appMiddleware {\r\n  static userSignupMiddleware(req, res, next) {\r\n    const { error } = validator(req.body);\r\n    if (error) return res.status(400).send({ error: error.details[0].message });\r\n    if (req.body.password1 !== req.body.password2) return res.status(406).send({ error: 'password mismatch' });\r\n    const email = users.find(item => item.email === req.body.email);\r\n    const username = users.find(item => item.username === req.body.username);\r\n    if (email) return res.status(409).send({ error: 'user with this email already has an account' });\r\n    if (username) return res.status(409).send({ error: 'username already taken, choose another one' });\r\n    return next();\r\n  }\r\n\r\n  static userLoginMiddleware(req, res, next) {\r\n    if (!Object.keys(req.body).includes('email')) return res.status(400).send({ error: 'email is required' });\r\n    if (!Object.keys(req.body).includes('password')) return res.status(400).send({ error: 'password is required' });\r\n    const { error } = validator(req.body);\r\n    if (error) return res.status(400).send({ error: error.details[0].message });\r\n    return next();\r\n  }\r\n\r\n  static addBusinessMiddleware(req, res, next) {\r\n    const { error } = validator(req.body);\r\n    const business = businesses.find(item => item.name === req.body.name);\r\n    if (error) return res.status(400).send({ error: error.details[0].message });\r\n    if (req.body.userId > users.length) return res.status(404).send({ error: 'user not found' });\r\n    if (business) return res.status(409).send({ error: 'name of business already taken' });\r\n    return next();\r\n  }\r\n\r\n  static removeBusinessMiddleware(req, res, next) {\r\n    const businessIndex = businesses.findIndex(index => index.id === Number(req.params.id));\r\n    if (businessIndex === -1) return res.status(404).send({ error: 'business not found' });\r\n    return next();\r\n  }\r\n\r\n  static getAllBusinessMiddleware(req, res, next) {\r\n    if (Object.keys(req.query).length) {\r\n      return next();\r\n    }\r\n    return res.status(200).send({ msg: businesses });\r\n  }\r\n\r\n  static businessByCategoryMiddleware(req, res, next) {\r\n    if (!Object.keys(req.query).includes('category')) {\r\n      return next();\r\n    }\r\n    const businessWithCategory = businesses.filter(item => item.category === req.query.category);\r\n    if (businessWithCategory.length) return res.status(200).send({ msg: businessWithCategory });\r\n    return res.status(404).send({ error: 'businesses with category not found' });\r\n  }\r\n\r\n  static getBusinessByIdMiddleware(req, res, next) {\r\n    const business = businesses.find(item => item.id === Number(req.params.id));\r\n    if (!business) return res.status(404).send({ error: 'business not found' });\r\n    return next();\r\n  }\r\n\r\n  static businessByLocationMiddleware(req, res, next) {\r\n    if (!Object.keys(req.query).includes('location')) return res.status(400).send({ error: 'bad request' });\r\n    const businessWithLocation = businesses.filter(item => item.location === req.query.location);\r\n    if (businessWithLocation.length) return res.status(200).send({ msg: businessWithLocation });\r\n    return res.status(404).send({ error: 'businesses with location not found' });\r\n  }\r\n\r\n  static addBusinessReviewMiddleware(req, res, next) {\r\n    if (req.body.businessId > businesses.length) return res.status(404).send({ error: 'business not found' });\r\n    const { error } = validator(req.body);\r\n    if (error) return res.status(400).send({ error: error.details[0].message });\r\n    return next();\r\n  }\r\n\r\n  static getBusinessReviewMiddleware(req, res, next) {\r\n    if (Number(req.params.id) > businesses.length) return res.status(404).send({ error: 'business not found' });\r\n    const businessReview = reviews.filter(item => item.businessId === Number(req.params.id));\r\n    if (!businessReview.length) return res.status(200).send({ msg: 'No review yet for business' });\r\n    return next();\r\n  }\r\n}\r\n"]}