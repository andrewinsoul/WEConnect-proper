{"version":3,"sources":["../../src/controllers/reviewHandler.js"],"names":["Review","Business","reviewHandler","createReview","req","res","create","email","body","username","review","businessId","then","status","send","msg","catch","error","name","getBusinessReview","findAll","include","model","where","params","id","result","length","resultObject","map","reviewer","Object","assign","business","profile"],"mappings":";;;;;;;AAAA;;IAEQA,M,aAAAA,M;IAAQC,Q,aAAAA,Q;AAET,IAAMC,wCAAgB;AAC3BC,cAD2B,wBACdC,GADc,EACTC,GADS,EACJ;AACrB,WAAOL,OACJM,MADI,CACG;AACNC,aAAOH,IAAII,IAAJ,CAASD,KADV;AAENE,gBAAUL,IAAII,IAAJ,CAASC,QAFb;AAGNC,cAAQN,IAAII,IAAJ,CAASE,MAHX;AAINC,kBAAYP,IAAII,IAAJ,CAASG;AAJf,KADH,EAOJC,IAPI,CAOC;AAAA,aAAMP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,KAAK,4BAAP,EAArB,CAAN;AAAA,KAPD,EAQJC,KARI,CAQE,UAACC,KAAD,EAAW;AAChB,UAAIA,MAAMC,IAAN,KAAe,oCAAnB,EAAyD,OAAOb,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,OAAO,oBAAT,EAArB,CAAP;AACzD;AACD,KAXI,CAAP;AAYD,GAd0B;AAgB3BE,mBAhB2B,6BAgBTf,GAhBS,EAgBJC,GAhBI,EAgBC;AAC1B,WAAOL,OACJoB,OADI,CACI;AACPC,eAAS,CACP;AACEC,eAAOrB;AADT,OADO,CADF;AAMPsB,aAAO;AACLZ,oBAAYP,IAAIoB,MAAJ,CAAWC;AADlB;AANA,KADJ,EAWJb,IAXI,CAWC,UAACc,MAAD,EAAY;AAChB,UAAIA,OAAOC,MAAX,EAAmB;AACjB,YAAMC,eAAeF,OAAOG,GAAP,CAAW,UAACC,QAAD,EAAc;AAC5C,iBAAOC,OAAOC,MAAP,CACL,EADK,EAEL;AACEzB,mBAAOuB,SAASvB,KADlB;AAEEE,sBAAUqB,SAASrB,QAFrB;AAGEC,oBAAQoB,SAASpB,MAHnB;AAIEuB,sBAAU;AACRf,oBAAMY,SAAS7B,QAAT,CAAkBiB,IADhB;AAERgB,uBAASJ,SAAS7B,QAAT,CAAkBiC;AAFnB;AAJZ,WAFK,CAAP;AAYD,SAboB,CAArB;AAcA,eAAO7B,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,KAAKa,YAAP,EAArB,CAAP;AACD;AACD,aAAOvB,IAAIQ,MAAJ,CAAWR,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,OAAO,WAAT,EAArB,CAAX,CAAP;AACD,KA9BI,CAAP;AA+BA;AACD;AAjD0B,CAAtB","file":"reviewHandler.js","sourcesContent":["import { db } from '../models/index';\r\n\r\nconst { Review, Business } = db;\r\n\r\nexport const reviewHandler = {\r\n  createReview(req, res) {\r\n    return Review\r\n      .create({\r\n        email: req.body.email,\r\n        username: req.body.username,\r\n        review: req.body.review,\r\n        businessId: req.body.businessId,\r\n      })\r\n      .then(() => res.status(201).send({ msg: 'review successfully posted' }))\r\n      .catch((error) => {\r\n        if (error.name === \"SequelizeForeignKeyConstraintError\") return res.status(404).send({ error: 'business not found' });\r\n        // return res.status(500).send({ error: 'Database Error' });\r\n      });\r\n  },\r\n\r\n  getBusinessReview(req, res) {\r\n    return Review\r\n      .findAll({\r\n        include: [\r\n          {\r\n            model: Business,\r\n          },\r\n        ],\r\n        where: {\r\n          businessId: req.params.id,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        if (result.length) {\r\n          const resultObject = result.map((reviewer) => {\r\n            return Object.assign(\r\n              {},\r\n              {\r\n                email: reviewer.email,\r\n                username: reviewer.username,\r\n                review: reviewer.review,\r\n                business: {\r\n                  name: reviewer.Business.name,\r\n                  profile: reviewer.Business.profile,\r\n                },\r\n              },\r\n            );\r\n          });\r\n          return res.status(200).send({ msg: resultObject });\r\n        }\r\n        return res.status(res.status(404).send({ error: 'not found' }));\r\n      });\r\n    // .catch(error => res.status(500).send({ error }));\r\n  },\r\n};\r\n"]}